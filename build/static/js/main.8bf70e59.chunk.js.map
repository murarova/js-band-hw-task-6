{"version":3,"sources":["components/NoteEditor/NoteEditor.js","components/DropDown/Dropdown.js","components/NoteItem/NoteItem.js","components/NoteList/NoteList.js","components/Filter/Filter.js","components/Modal/Modal.js","components/Dashboard/Dashboard.js","pages/PageNotFound.js","App.js","index.js"],"names":["INITIAL_STATE","title","text","priority","id","done","NoteEditor","props","onChange","e","setState","target","name","value","onSubmit","state","preventDefault","alert","note","this","onCancel","className","type","placeholder","rows","onBlur","onClick","Component","defaultProps","Dropdown","items","map","el","key","NoteItem","isDropdawnOpen","close","timeout","setTimeout","componentWillUnmount","clearTimeout","onDelete","onEdit","onDone","onClose","NoteList","notes","Filter","Modal","backdropeRef","createRef","handleKeyPress","code","handleBackDropClick","current","window","addEventListener","removeEventListener","children","ref","INITIAL_FILTER_STATE","Dashboard","noteToAdd","shortid","generate","filteredNotes","newNotes","currentNote","findNote","isModalOpen","onCreate","currentNotes","filter","newNote","onFilterChange","filterState","newFilterValue","filterItems","updateFilterNotes","previousFilteredNotes","curentFilteredNotes","length","arr","forEach","item","push","Object","values","every","newFilterNotes","selectedNotes","toLowerCase","includes","PageNotFound","App","exact","path","to","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8bf70e59.chunk.js","sourcesContent":["/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n    title: '',\n    text: '',\n    priority: 'high',\n    id: '',\n    done: false,\n};\n\nclass NoteEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = props.note || INITIAL_STATE;\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit = e => {\n        const { title, text, priority, done, id } = this.state;\n        e.preventDefault();\n        if (text && title) {\n            this.props.onSubmit(title, text, priority, id, done);\n            this.setState({ ...INITIAL_STATE });\n        } else {\n            alert('Please, fill all form fields');\n        }\n    };\n\n    render() {\n        const { text, title } = this.state;\n        const { onCancel } = this.props;\n\n        return (\n            <div className=\"col-xs-10 col-sm-8 col-md-4\">\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <form className=\"form\" onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <p>Title:</p>\n                                <input\n                                    className=\"form-control\"\n                                    name=\"title\"\n                                    type=\"text\"\n                                    placeholder=\"Title\"\n                                    value={title}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Description:</p>\n                                <textarea\n                                    className=\"form-control\"\n                                    rows=\"5\"\n                                    placeholder=\"Description\"\n                                    name=\"text\"\n                                    value={text}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <p className=\"modal-title\">Priority:</p>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"priority\"\n                                    onBlur={this.onChange}\n                                >\n                                    <option value=\"high\">high</option>\n                                    <option value=\"normal\">normal</option>\n                                    <option value=\"low\">low</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"actions\">\n                                    <button\n                                        className=\"btn btn-success\"\n                                        type=\"submit\"\n                                    >\n                                        Create\n                                    </button>\n                                    <button\n                                        className=\"btn btn-danger\"\n                                        type=\"submit\"\n                                        onClick={onCancel}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nNoteEditor.defaultProps = {\n    note: {},\n};\n\nNoteEditor.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    note: PropTypes.PropTypes.shape({\n        title: PropTypes.string,\n        text: PropTypes.string,\n        priority: PropTypes.string,\n        id: PropTypes.string,\n        done: PropTypes.bool,\n    }),\n};\n\nexport default NoteEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Dropdown = ({ items }) => {\n    return (\n        <>\n            {items.map(el => (\n                <button\n                    type=\"button\"\n                    className={el.className}\n                    key={el.name}\n                    onClick={el.onClick}\n                >\n                    {el.name}\n                </button>\n            ))}\n        </>\n    );\n};\n\nDropdown.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Dropdown;\n","/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../DropDown/Dropdown';\n\nclass NoteItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDropdawnOpen: false,\n            timeout: null,\n        };\n    }\n\n    onClick = () => {\n        this.setState(state => ({\n            isDropdawnOpen: !state.isDropdawnOpen,\n        }));\n    };\n\n    close = () => {\n        const timeout = setTimeout(() => {\n            this.setState({\n                isDropdawnOpen: false,\n            });\n        }, 100);\n        this.setState({ timeout });\n    };\n\n    componentWillUnmount = () => {\n        clearTimeout(this.state.timeout);\n    };\n\n    render() {\n        const {\n            title,\n            text,\n            priority,\n            id,\n            done,\n            onDelete,\n            onEdit,\n            onDone,\n        } = this.props;\n        const { isDropdawnOpen } = this.state;\n\n        const items = [\n            {\n                name: 'Done',\n                className: 'btn btn-success dropdawn-btn',\n                onClick: onDone,\n            },\n            {\n                name: 'Edit',\n                className: 'btn btn-info dropdawn-btn',\n                onClick: onEdit,\n            },\n            {\n                name: 'Delete',\n                className: 'btn btn-danger dropdawn-btn',\n                onClick: onDelete,\n            },\n        ];\n\n        return (\n            <li className={done ? 'done note' : 'note'} key={id}>\n                <h3 className=\"title\">{title}</h3>\n                <p className=\"text\">{text}</p>\n                <div className=\"actions\">\n                    <button\n                        type=\"button\"\n                        className={\n                            priority === 'high'\n                                ? 'btn btn-danger'\n                                : priority === 'low'\n                                ? 'btn btn-info'\n                                : 'btn btn-primary'\n                        }\n                    >\n                        {priority}\n                    </button>\n                    <div className=\"dropdawn-wrapper\" onBlur={this.close}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-warning\"\n                            onClick={this.onClick}\n                        >\n                            ...\n                        </button>\n\n                        {isDropdawnOpen && (\n                            <div className=\"dropdown\">\n                                <Dropdown\n                                    onClose={this.onClose}\n                                    items={items}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nNoteItem.defaultProps = {\n    title: '',\n    text: '',\n    priority: 'high',\n    id: '',\n    done: false,\n};\n\nNoteItem.propTypes = {\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDone: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    text: PropTypes.string,\n    priority: PropTypes.string,\n    id: PropTypes.string,\n    done: PropTypes.bool,\n};\n\nexport default NoteItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from '../NoteItem/NoteItem';\n\nconst NoteList = ({ notes, onDelete, onEdit, onDone }) => (\n    <div className=\"row\">\n        <div className=\"col-xs-12\">\n            <ul className=\"note-list\">\n                {notes.map(note => {\n                    const { title, text, priority, id, done } = note;\n                    return (\n                        <NoteItem\n                            key={id}\n                            title={title}\n                            text={text}\n                            id={id}\n                            priority={priority}\n                            done={done}\n                            onDelete={() => onDelete(id)}\n                            onEdit={() => onEdit(id)}\n                            onDone={() => onDone(id)}\n                        />\n                    );\n                })}\n            </ul>\n        </div>\n    </div>\n);\n\nNoteList.propTypes = {\n    notes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDone: PropTypes.func.isRequired,\n};\n\nexport default NoteList;\n","/* eslint-disable jsx-a11y/no-onchange */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onClick, onChange }) => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-xs-12\">\n                <form className=\"form-inline main-form\">\n                    <div className=\"col-xs-12 col-sm-5\">\n                        <div className=\"form-group width-100\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control width-100\"\n                                name=\"title\"\n                                placeholder=\"search by title\"\n                                onChange={onChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-2\">\n                        <div className=\"form-group width-100\">\n                            <select\n                                className=\"form-control width-100\"\n                                name=\"done\"\n                                onChange={onChange}\n                            >\n                                <option value=\"all\">all</option>\n                                <option value=\"open\">open</option>\n                                <option value=\"done\">done</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-2\">\n                        <div className=\"form-group width-100\">\n                            <select\n                                className=\"form-control width-100\"\n                                name=\"priority\"\n                                onChange={onChange}\n                            >\n                                <option value=\"all\">all</option>\n                                <option value=\"high\">high</option>\n                                <option value=\"normal\">normal</option>\n                                <option value=\"low\">low</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-xs-12 col-sm-3\">\n                        <div className=\"form-group width-100\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-primary width-100\"\n                                onClick={onClick}\n                            >\n                                Create\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </>\n);\n\nFilter.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-undef */\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n    backdropeRef = createRef();\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyPress);\n    }\n\n    handleKeyPress = e => {\n        if (e.code !== 'Escape') return;\n        this.props.onClose();\n    };\n\n    handleBackDropClick = e => {\n        const { current } = this.backdropeRef;\n        if (current && e.target !== current) return;\n        this.props.onClose();\n    };\n\n    render() {\n        const { children } = this.props;\n        return (\n            <div\n                className=\"overlay\"\n                onClick={this.handleBackDropClick}\n                ref={this.backdropeRef}\n            >\n                {children}\n            </div>\n        );\n    }\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport NoteEditor from '../NoteEditor/NoteEditor';\nimport NoteList from '../NoteList/NoteList';\nimport Filter from '../Filter/Filter';\nimport Modal from '../Modal/Modal';\nimport '../../index.css';\n\nconst INITIAL_FILTER_STATE = {\n    title: '',\n    priority: '',\n    done: '',\n};\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: [],\n            filteredNotes: [],\n            note: null,\n            isModalOpen: false,\n            filterState: INITIAL_FILTER_STATE,\n        };\n    }\n\n    // =====================\n    // for save notes in LOCALSTORAGE, please, uncomment 2 methods below and\n    // import LOCALSTORAGE from '../../services/localStorage';\n\n    // componentDidMount() {\n    //     const fromLS = LOCALSTORAGE.get('notes') || [];\n    //     this.setState({ notes: fromLS, filteredNotes: fromLS });\n    // }\n\n    // componentDidUpdate() {\n    //     const { notes } = this.state;\n    //     LOCALSTORAGE.set(notes);\n    // }\n    // =====================\n\n    onSubmit = (title, text, priority, id, done) => {\n        const { notes } = this.state;\n        if (id === '') {\n            const noteToAdd = {\n                done,\n                title,\n                text,\n                priority,\n                id: shortid.generate(),\n            };\n            this.setState(state => ({\n                notes: [noteToAdd, ...state.notes],\n                filteredNotes: [noteToAdd, ...state.filteredNotes],\n            }));\n        } else {\n            const noteToAdd = {\n                done,\n                title,\n                text,\n                priority,\n                id,\n            };\n            const newNotes = notes.map(note =>\n                note.id === id ? noteToAdd : note,\n            );\n            this.setState({\n                notes: newNotes,\n                filteredNotes: newNotes,\n            });\n        }\n\n        this.onClose();\n    };\n\n    onEdit = id => {\n        const currentNote = this.findNote(id)[0];\n        this.setState({ isModalOpen: true, note: currentNote });\n    };\n\n    onCreate = () => {\n        this.setState({ isModalOpen: true });\n    };\n\n    onClose = () => {\n        this.setState({ note: null, isModalOpen: false });\n    };\n\n    onDelete = id => {\n        const { notes } = this.state;\n        const currentNotes = notes.filter(note => note.id !== id);\n        this.setState({ notes: currentNotes, filteredNotes: currentNotes });\n    };\n\n    onDone = id => {\n        const { notes } = this.state;\n        const currentNote = this.findNote(id)[0];\n        const newNote = { ...currentNote, done: !currentNote.done };\n\n        const newNotes = notes.map(note => (note.id === id ? newNote : note));\n        this.setState({ notes: newNotes, filteredNotes: newNotes });\n    };\n\n    findNote = id => {\n        const { notes } = this.state;\n        return notes.filter(el => el.id === id);\n    };\n\n    onFilterChange = e => {\n        const { filterState } = this.state;\n        if (e.target.value === 'all') {\n            const newFilterValue = { [e.target.name]: '' };\n\n            this.setState(\n                { filterState: { ...filterState, ...newFilterValue } },\n                () => this.filterItems(),\n            );\n            return;\n        }\n        if (e.target.value === 'open') {\n            const newFilterValue = { [e.target.name]: false };\n\n            this.setState(\n                { filterState: { ...filterState, ...newFilterValue } },\n                () => this.filterItems(),\n            );\n            return;\n        }\n        if (e.target.value === 'done') {\n            const newFilterValue = { [e.target.name]: true };\n\n            this.setState(\n                { filterState: { ...filterState, ...newFilterValue } },\n                () => this.filterItems(),\n            );\n            return;\n        }\n        const newFilterValue = { [e.target.name]: e.target.value };\n\n        this.setState(\n            { filterState: { ...filterState, ...newFilterValue } },\n            () => this.filterItems(),\n        );\n    };\n\n    updateFilterNotes = (previousFilteredNotes, curentFilteredNotes) => {\n        if (previousFilteredNotes.length > 0) {\n            const arr = [];\n            previousFilteredNotes.filter(note =>\n                curentFilteredNotes.forEach(item => {\n                    if (item.id === note.id) {\n                        arr.push(item);\n                    }\n                }),\n            );\n            return arr;\n        }\n        return curentFilteredNotes;\n    };\n\n    filterItems = () => {\n        const { filterState, notes, filteredNotes } = this.state;\n\n        const isFomaStateEmpty = Object.values(filterState).every(\n            el => el === '',\n        );\n        if (isFomaStateEmpty) {\n            this.setState({ filteredNotes: notes });\n        }\n\n        let newFilterNotes = [];\n\n        if (filteredNotes.title !== '') {\n            const selectedNotes = notes.filter(item =>\n                item.title\n                    .toLowerCase()\n                    .includes(filterState.title.toLowerCase()),\n            );\n            newFilterNotes = this.updateFilterNotes(\n                newFilterNotes,\n                selectedNotes,\n            );\n        }\n\n        if (filterState.done !== '' && filterState.done !== 'all') {\n            const selectedNotes = notes.filter(\n                item => item.done === filterState.done,\n            );\n            newFilterNotes = this.updateFilterNotes(\n                newFilterNotes,\n                selectedNotes,\n            );\n        }\n\n        if (filterState.priority !== '' && filterState.priority !== 'all') {\n            const selectedNotes = notes.filter(\n                item => item.priority === filterState.priority,\n            );\n            newFilterNotes = this.updateFilterNotes(\n                newFilterNotes,\n                selectedNotes,\n            );\n        }\n        this.setState({ filteredNotes: newFilterNotes });\n    };\n\n    render() {\n        const { filteredNotes, isModalOpen, note } = this.state;\n        return (\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n                    <h2 className=\"text-center\">JS-BAND-HW-TASK-6</h2>\n                    <div>\n                        {isModalOpen && (\n                            <Modal onClose={this.onClose}>\n                                <NoteEditor\n                                    note={note}\n                                    onCancel={this.onClose}\n                                    onSubmit={this.onSubmit}\n                                />\n                            </Modal>\n                        )}\n                        <Filter\n                            onChange={this.onFilterChange}\n                            onClick={this.onCreate}\n                        />\n                        {filteredNotes.length > 0 && (\n                            <NoteList\n                                notes={filteredNotes}\n                                onEdit={this.onEdit}\n                                onDelete={this.onDelete}\n                                onDone={this.onDone}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\n\nconst PageNotFound = () => (\n    <>\n        <h1>404</h1>\n        <p>Looks like the page you were looking for is no longer here.</p>\n    </>\n);\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport PageNotFound from './pages/PageNotFound';\n\nconst App = () => (\n    <>\n        <Switch>\n            <Redirect exact path=\"/\" to=\"/todos\" />\n            <Route path=\"/todos\" component={Dashboard} />\n            <Route component={PageNotFound} />\n        </Switch>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <App />\n    </HashRouter>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}